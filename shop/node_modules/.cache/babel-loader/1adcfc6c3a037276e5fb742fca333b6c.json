{"ast":null,"code":"var _jsxFileName = \"/var/www/html/check/javascript-shop/client.v1/src/components/CreateCategory.js\",\n    _s = $RefreshSig$();\n\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { createCategory } from '../http/catalogAPI.js';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateCategory = props => {\n  _s();\n\n  const {\n    show,\n    setShow,\n    setChange\n  } = props;\n  const [name, setName] = useState('');\n  const [valid, setValid] = useState(null);\n\n  const handleChange = event => {\n    setName(event.target.value);\n    setValid(event.target.value.trim() !== '');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    /*\n     * На первый взгляд кажется, что переменная correct не нужна, можно обойтись valid, но это\n     * не так. Нельзя использовать значение valid сразу после изменения этого значения — ф-ция\n     * setValid не изменяет значение состояния мгновенно. Вызов функции лишь означает — React\n     * «принял к сведению» наше сообщение, что состояние нужно изменить.\n     */\n\n    const correct = name.trim() !== '';\n    setValid(correct);\n\n    if (correct) {\n      const data = {\n        name: name.trim()\n      };\n      createCategory(data).then(data => {\n        // готовим форму к созданию еще одной категории\n        setName('');\n        setValid(null); // закрываем модальное окно создания категории\n\n        setShow(false); // изменяем состояние компонента списка категорий\n\n        setChange(state => !state);\n      }).catch(error => alert(error.response.data.message));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: () => setShow(false),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          name: \"name\",\n          value: name,\n          onChange: e => handleChange(e),\n          isValid: valid === true,\n          isInvalid: valid === false,\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438...\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateCategory, \"HROwx9j5UnCXMJ+9R96KEoSTjxQ=\");\n\n_c = CreateCategory;\nexport default CreateCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCategory\");","map":{"version":3,"sources":["/var/www/html/check/javascript-shop/client.v1/src/components/CreateCategory.js"],"names":["Modal","Button","Form","createCategory","useState","CreateCategory","props","show","setShow","setChange","name","setName","valid","setValid","handleChange","event","target","value","trim","handleSubmit","preventDefault","correct","data","then","state","catch","error","alert","response","message","e"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,iBAApC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA+BH,KAArC;AAEA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMU,YAAY,GAAIC,KAAD,IAAW;AAC5BJ,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACAJ,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,IAAnB,OAA8B,EAA/B,CAAR;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAIJ,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACK,cAAN;AACA;AACR;AACA;AACA;AACA;AACA;;AACQ,UAAMC,OAAO,GAAGX,IAAI,CAACQ,IAAL,OAAgB,EAAhC;AACAL,IAAAA,QAAQ,CAACQ,OAAD,CAAR;;AACA,QAAIA,OAAJ,EAAa;AACT,YAAMC,IAAI,GAAG;AACTZ,QAAAA,IAAI,EAAEA,IAAI,CAACQ,IAAL;AADG,OAAb;AAGAf,MAAAA,cAAc,CAACmB,IAAD,CAAd,CACKC,IADL,CAEQD,IAAI,IAAI;AACJ;AACAX,QAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR,CAHI,CAIJ;;AACAL,QAAAA,OAAO,CAAC,KAAD,CAAP,CALI,CAMJ;;AACAC,QAAAA,SAAS,CAACe,KAAK,IAAI,CAACA,KAAX,CAAT;AACH,OAVT,EAYKC,KAZL,CAaQC,KAAK,IAAIC,KAAK,CAACD,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAArB,CAbtB;AAeH;AACJ,GA9BD;;AAgCA,sBACI,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEtB,IAAb;AAAmB,IAAA,MAAM,EAAE,MAAMC,OAAO,CAAC,KAAD,CAAxC;AAAA,4BACI,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,KAAD,CAAO,IAAP;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,QAAQ,EAAEW,YAA3B;AAAA,gCACI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAET,IAFX;AAGI,UAAA,QAAQ,EAAEoB,CAAC,IAAIhB,YAAY,CAACgB,CAAD,CAH/B;AAII,UAAA,OAAO,EAAElB,KAAK,KAAK,IAJvB;AAKI,UAAA,SAAS,EAAEA,KAAK,KAAK,KALzB;AAMI,UAAA,WAAW,EAAC,4GANhB;AAOI,UAAA,SAAS,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAjED;;GAAMP,c;;KAAAA,c;AAmEN,eAAeA,cAAf","sourcesContent":["import { Modal, Button, Form } from 'react-bootstrap'\nimport { createCategory } from '../http/catalogAPI.js'\nimport { useState } from 'react'\n\nconst CreateCategory = (props) => {\n    const { show, setShow, setChange } = props\n\n    const [name, setName] = useState('')\n    const [valid, setValid] = useState(null)\n\n    const handleChange = (event) => {\n        setName(event.target.value)\n        setValid(event.target.value.trim() !== '')\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        /*\n         * На первый взгляд кажется, что переменная correct не нужна, можно обойтись valid, но это\n         * не так. Нельзя использовать значение valid сразу после изменения этого значения — ф-ция\n         * setValid не изменяет значение состояния мгновенно. Вызов функции лишь означает — React\n         * «принял к сведению» наше сообщение, что состояние нужно изменить.\n         */\n        const correct = name.trim() !== ''\n        setValid(correct)\n        if (correct) {\n            const data = {\n                name: name.trim()\n            }\n            createCategory(data)\n                .then(\n                    data => {\n                        // готовим форму к созданию еще одной категории\n                        setName('')\n                        setValid(null)\n                        // закрываем модальное окно создания категории\n                        setShow(false)\n                        // изменяем состояние компонента списка категорий\n                        setChange(state => !state)\n                    }\n                )\n                .catch(\n                    error => alert(error.response.data.message)\n                )\n        }\n    }\n\n    return (\n        <Modal show={show} onHide={() => setShow(false)}>\n            <Modal.Header closeButton>\n                <Modal.Title>Новая категория</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <Form noValidate onSubmit={handleSubmit}>\n                    <Form.Control\n                        name=\"name\"\n                        value={name}\n                        onChange={e => handleChange(e)}\n                        isValid={valid === true}\n                        isInvalid={valid === false}\n                        placeholder=\"Название категории...\"\n                        className=\"mb-3\"\n                    />\n                    <Button type=\"submit\">Сохранить</Button>\n                </Form>\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default CreateCategory"]},"metadata":{},"sourceType":"module"}