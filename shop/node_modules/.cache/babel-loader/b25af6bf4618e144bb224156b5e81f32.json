{"ast":null,"code":"import _asyncToGenerator from\"/var/www/html/check/javascript-shop/client.v1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/var/www/html/check/javascript-shop/client.v1/node_modules/@babel/runtime/regenerator/index.js\";import{guestInstance,authInstance}from'./index.js';import jwtDecode from'jwt-decode';export var signup=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(email,password){var response,token,user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return guestInstance.post('user/signup',{email:email,password:password,role:'USER'});case 3:response=_context.sent;token=response.data.token;user=jwtDecode(token);localStorage.setItem('token',token);return _context.abrupt(\"return\",user);case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);alert(_context.t0.response.data.message);return _context.abrupt(\"return\",false);case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function signup(_x,_x2){return _ref.apply(this,arguments);};}();export var login=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email,password){var response,token,user;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return guestInstance.post('user/login',{email:email,password:password});case 3:response=_context2.sent;token=response.data.token;user=jwtDecode(token);localStorage.setItem('token',token);return _context2.abrupt(\"return\",user);case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);alert(_context2.t0.response.data.message);return _context2.abrupt(\"return\",false);case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[0,10]]);}));return function login(_x3,_x4){return _ref2.apply(this,arguments);};}();export var logout=function logout(){localStorage.removeItem('token');};export var check=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var userToken,userData,_userToken,response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_userToken=localStorage.getItem('token');// если в хранилище нет действительного токена\nif(_userToken){_context3.next=4;break;}return _context3.abrupt(\"return\",false);case 4:_context3.next=6;return authInstance.get('user/check');case 6:response=_context3.sent;_userToken=response.data.token;userData=jwtDecode(_userToken);localStorage.setItem('token',_userToken);return _context3.abrupt(\"return\",userData);case 13:_context3.prev=13;_context3.t0=_context3[\"catch\"](0);localStorage.removeItem('token');return _context3.abrupt(\"return\",false);case 17:case\"end\":return _context3.stop();}}},_callee3,null,[[0,13]]);}));return function check(){return _ref3.apply(this,arguments);};}();","map":{"version":3,"sources":["/var/www/html/check/javascript-shop/client.v1/src/http/userAPI.js"],"names":["guestInstance","authInstance","jwtDecode","signup","email","password","post","role","response","token","data","user","localStorage","setItem","alert","message","login","logout","removeItem","check","userToken","getItem","get","userData"],"mappings":"yQAAA,OAASA,aAAT,CAAwBC,YAAxB,KAA4C,YAA5C,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CAEA,MAAO,IAAMC,CAAAA,MAAM,0FAAG,iBAAOC,KAAP,CAAcC,QAAd,gLAESL,CAAAA,aAAa,CAACM,IAAd,CAAmB,aAAnB,CAAkC,CAACF,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAkBE,IAAI,CAAE,MAAxB,CAAlC,CAFT,QAERC,QAFQ,eAGRC,KAHQ,CAGAD,QAAQ,CAACE,IAAT,CAAcD,KAHd,CAIRE,IAJQ,CAIDT,SAAS,CAACO,KAAD,CAJR,CAKdG,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BJ,KAA9B,EALc,gCAMPE,IANO,4DAQdG,KAAK,CAAC,YAAEN,QAAF,CAAWE,IAAX,CAAgBK,OAAjB,CAAL,CARc,gCASP,KATO,uEAAH,kBAANZ,CAAAA,MAAM,gDAAZ,CAaP,MAAO,IAAMa,CAAAA,KAAK,2FAAG,kBAAOZ,KAAP,CAAcC,QAAd,sLAEUL,CAAAA,aAAa,CAACM,IAAd,CAAmB,YAAnB,CAAiC,CAACF,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAjC,CAFV,QAEPG,QAFO,gBAGPC,KAHO,CAGCD,QAAQ,CAACE,IAAT,CAAcD,KAHf,CAIPE,IAJO,CAIAT,SAAS,CAACO,KAAD,CAJT,CAKbG,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BJ,KAA9B,EALa,iCAMNE,IANM,+DAQbG,KAAK,CAAC,aAAEN,QAAF,CAAWE,IAAX,CAAgBK,OAAjB,CAAL,CARa,iCASN,KATM,yEAAH,kBAALC,CAAAA,KAAK,kDAAX,CAaP,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACxBL,YAAY,CAACM,UAAb,CAAwB,OAAxB,EACH,CAFM,CAIP,MAAO,IAAMC,CAAAA,KAAK,2FAAG,oMAGTC,UAHS,CAGGR,YAAY,CAACS,OAAb,CAAqB,OAArB,CAHH,CAIb;AAJa,GAKRD,UALQ,2DAMF,KANE,gCASUnB,CAAAA,YAAY,CAACqB,GAAb,CAAiB,YAAjB,CATV,QASPd,QATO,gBAUbY,UAAS,CAAGZ,QAAQ,CAACE,IAAT,CAAcD,KAA1B,CACAc,QAAQ,CAAGrB,SAAS,CAACkB,UAAD,CAApB,CACAR,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BO,UAA9B,EAZa,iCAaNG,QAbM,+DAebX,YAAY,CAACM,UAAb,CAAwB,OAAxB,EAfa,iCAgBN,KAhBM,yEAAH,kBAALC,CAAAA,KAAK,2CAAX","sourcesContent":["import { guestInstance, authInstance } from './index.js'\nimport jwtDecode from 'jwt-decode'\n\nexport const signup = async (email, password) => {\n    try {\n        const response = await guestInstance.post('user/signup', {email, password, role: 'USER'})\n        const token = response.data.token\n        const user = jwtDecode(token)\n        localStorage.setItem('token', token)\n        return user\n    } catch (e) {\n        alert(e.response.data.message)\n        return false\n    }\n}\n\nexport const login = async (email, password) => {\n    try {\n        const response = await guestInstance.post('user/login', {email, password})\n        const token = response.data.token\n        const user = jwtDecode(token)\n        localStorage.setItem('token', token)\n        return user\n    } catch (e) {\n        alert(e.response.data.message)\n        return false\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token')\n}\n\nexport const check = async () => {\n    let userToken, userData\n    try {\n        let userToken = localStorage.getItem('token')\n        // если в хранилище нет действительного токена\n        if (!userToken) {\n            return false\n        }\n        // токен есть, надо проверить его подлинность\n        const response = await authInstance.get('user/check')\n        userToken = response.data.token\n        userData = jwtDecode(userToken)\n        localStorage.setItem('token', userToken)\n        return userData\n    } catch(e) {\n        localStorage.removeItem('token')\n        return false\n    }\n}"]},"metadata":{},"sourceType":"module"}