{"ast":null,"code":"import { guestInstance, authInstance } from './index.js';\n/*\n * Создание, обновление и удаление категории, получение списка всех категорий\n */\n\nexport const createCategory = async category => {\n  const {\n    data\n  } = await authInstance.post('category/create', category);\n  return data;\n};\nexport const updateCategory = async (id, category) => {\n  const {\n    data\n  } = await authInstance.put(`category/update/${id}`, category);\n  return data;\n};\nexport const deleteCategory = async id => {\n  const {\n    data\n  } = await authInstance.delete(`category/delete/${id}`);\n  return data;\n};\nexport const fetchCategories = async () => {\n  const {\n    data\n  } = await guestInstance.get('category/getall');\n  return data;\n};\nexport const fetchCategory = async id => {\n  const {\n    data\n  } = await guestInstance.get(`category/getone/${id}`);\n  return data;\n};\n/*\n * Создание, обновление и удаление бренда, получение списка всех брендов\n */\n\nexport const createBrand = async brand => {\n  const {\n    data\n  } = await authInstance.post('brand/create', brand);\n  return data;\n};\nexport const updateBrand = async (id, brand) => {\n  const {\n    data\n  } = await authInstance.put(`brand/update/${id}`, brand);\n  return data;\n};\nexport const deleteBrand = async id => {\n  const {\n    data\n  } = await authInstance.delete(`brand/delete/${id}`);\n  return data;\n};\nexport const fetchBrands = async () => {\n  const {\n    data\n  } = await guestInstance.get('brand/getall');\n  return data;\n};\nexport const fetchBrand = async id => {\n  const {\n    data\n  } = await guestInstance.get(`brand/getone/${id}`);\n  return data;\n};\n/*\n * Создание, обновление и удаление товара, получение списка всех товаров\n */\n\nexport const createProduct = async product => {\n  const {\n    data\n  } = await authInstance.post('product/create', product);\n  return data;\n};\nexport const updateProduct = async (id, product) => {\n  const {\n    data\n  } = await authInstance.put(`product/update/${id}`, product);\n  return data;\n};\nexport const deleteProduct = async id => {\n  const {\n    data\n  } = await authInstance.delete(`product/delete/${id}`);\n  return data;\n};\nexport const fetchAllProducts = async function () {\n  let categoryId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let brandId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let page = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 3;\n  let url = 'product/getall'; // фильтрация товаров по категории и/или бренду\n\n  if (categoryId) url = url + '/categoryId/' + categoryId;\n  if (brandId) url = url + '/brandId/' + brandId;\n  const {\n    data\n  } = await guestInstance.get(url, {\n    params: {\n      // GET-параметры для постраничной навигации\n      page,\n      limit\n    }\n  });\n  return data;\n};\nexport const fetchOneProduct = async id => {\n  const {\n    data\n  } = await guestInstance.get(`product/getone/${id}`);\n  return data;\n};\nexport const fetchProdRating = async id => {\n  const {\n    data\n  } = await guestInstance.get(`rating/product/${id}`);\n  return data;\n};\n/*\n * Создание, обновление и удаление характеристик товара\n */\n\nexport const createProperty = async (productId, property) => {\n  const {\n    data\n  } = await authInstance.post(`product/${productId}/property/create`, property);\n  return data;\n};\nexport const updateProperty = async (productId, id, property) => {\n  const {\n    data\n  } = await authInstance.put(`product/${productId}/property/update/${id}`, property);\n  return data;\n};\nexport const deleteProperty = async (productId, id) => {\n  const {\n    data\n  } = await authInstance.delete(`product/${productId}/property/delete/${id}`);\n  return data;\n};","map":{"version":3,"sources":["/var/www/html/check/javascript-shop/client.v1/src/http/catalogAPI.js"],"names":["guestInstance","authInstance","createCategory","category","data","post","updateCategory","id","put","deleteCategory","delete","fetchCategories","get","fetchCategory","createBrand","brand","updateBrand","deleteBrand","fetchBrands","fetchBrand","createProduct","product","updateProduct","deleteProduct","fetchAllProducts","categoryId","brandId","page","limit","url","params","fetchOneProduct","fetchProdRating","createProperty","productId","property","updateProperty","deleteProperty"],"mappings":"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","sourcesContent":["import { guestInstance, authInstance } from './index.js'\n\n/*\n * Создание, обновление и удаление категории, получение списка всех категорий\n */\nexport const createCategory = async (category) => {\n    const { data } = await authInstance.post('category/create', category)\n    return data\n}\n\nexport const updateCategory = async (id, category) => {\n    const { data } = await authInstance.put(`category/update/${id}`, category)\n    return data\n}\n\nexport const deleteCategory = async (id) => {\n    const { data } = await authInstance.delete(`category/delete/${id}`)\n    return data\n}\n\nexport const fetchCategories = async () => {\n    const { data } = await guestInstance.get('category/getall')\n    return data\n}\n\nexport const fetchCategory = async (id) => {\n    const { data } = await guestInstance.get(`category/getone/${id}`)\n    return data\n}\n\n/*\n * Создание, обновление и удаление бренда, получение списка всех брендов\n */\nexport const createBrand = async (brand) => {\n    const { data } = await authInstance.post('brand/create', brand)\n    return data\n}\n\nexport const updateBrand = async (id, brand) => {\n    const { data } = await authInstance.put(`brand/update/${id}`, brand)\n    return data\n}\n\nexport const deleteBrand = async (id) => {\n    const { data } = await authInstance.delete(`brand/delete/${id}`)\n    return data\n}\n\nexport const fetchBrands = async () => {\n    const { data } = await guestInstance.get('brand/getall')\n    return data\n}\n\nexport const fetchBrand = async (id) => {\n    const { data } = await guestInstance.get(`brand/getone/${id}`)\n    return data\n}\n\n/*\n * Создание, обновление и удаление товара, получение списка всех товаров\n */\nexport const createProduct = async (product) => {\n    const { data } = await authInstance.post('product/create', product)\n    return data\n}\n\nexport const updateProduct = async (id, product) => {\n    const { data } = await authInstance.put(`product/update/${id}`, product)\n    return data\n}\n\nexport const deleteProduct = async (id) => {\n    const { data } = await authInstance.delete(`product/delete/${id}`)\n    return data\n}\n\nexport const fetchAllProducts = async (categoryId = null, brandId = null, page = 1, limit = 3) => {\n    let url = 'product/getall'\n    // фильтрация товаров по категории и/или бренду\n    if (categoryId) url = url + '/categoryId/' + categoryId\n    if (brandId) url = url + '/brandId/' + brandId\n    const { data } = await guestInstance.get(\n        url,\n        {params: { // GET-параметры для постраничной навигации\n            page, limit\n        }\n    })\n    return data\n}\n\nexport const fetchOneProduct = async (id) => {\n    const { data } = await guestInstance.get(`product/getone/${id}`)\n    return data\n}\n\nexport const fetchProdRating = async (id) => {\n    const { data } = await guestInstance.get(`rating/product/${id}`)\n    return data\n}\n\n/*\n * Создание, обновление и удаление характеристик товара\n */\nexport const createProperty = async (productId, property) => {\n    const { data } = await authInstance.post(`product/${productId}/property/create`, property)\n    return data\n}\n\nexport const updateProperty = async (productId, id, property) => {\n    const { data } = await authInstance.put(`product/${productId}/property/update/${id}`, property)\n    return data\n}\n\nexport const deleteProperty = async (productId, id) => {\n    const { data } = await authInstance.delete(`product/${productId}/property/delete/${id}`)\n    return data\n}"]},"metadata":{},"sourceType":"module"}